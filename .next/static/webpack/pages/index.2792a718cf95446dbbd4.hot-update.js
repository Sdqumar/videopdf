/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/PdfView.jsx":
/*!********************************!*\
  !*** ./components/PdfView.jsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Users_sadeeq_Downloads_videopdf_node_modules_next_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_pdf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-pdf */ \"./node_modules/react-pdf/dist/esm/entry.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\nvar _jsxFileName = \"/Users/sadeeq/Downloads/videopdf/components/PdfView.jsx\",\n    _s = $RefreshSig$();\n\n\n // pdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${pdfjs.version}/build/pdf.worker.min.js`;\n// import \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\n// import \"react-pdf/dist/esm/Page/TextLayer.css\";\n\n // import pdfmap from \"../pdfmap1.json\";\n\nvar options = {\n  cMapUrl: \"cmaps/\",\n  cMapPacked: true,\n  standardFontDataUrl: \"standard_fonts/\"\n}; // function highlightPattern(text, pattern) {\n//   return text.replace(\n//     pattern.find((e) => e == text),\n//     (value) => `<mark>${value}</mark>`\n//   );\n//   const splitText = text.split(pattern);\n//   if (splitText.length <= 1) {\n//     return text;\n//   }\n//   const matches = text.match(pattern);\n//   return splitText.reduce(\n//     (arr, element, index) =>\n//       matches[index]\n//         ? [...arr, element, <mark>{matches[index]}</mark>]\n//         : [...arr, element],\n//     []\n//   );\n// }\n\nfunction searchTextInSentence(textArray, sentence) {\n  var str = textArray.join(\"-----\");\n  var str2 = sentence.split(\" \").join(\"-----\");\n  console.log(textArray.filter(function (str) {\n    return str !== \" \";\n  }));\n}\n\nfunction replaceArray(find, replace) {\n  var replaceString = this;\n  var regex;\n\n  for (var i = 0; i < find.length; i++) {\n    regex = new RegExp(find[i].str, \"g\");\n    console.log(regex);\n    replaceString = replaceString.replace(regex, replace[i]);\n  }\n\n  return replaceString;\n}\n\nfunction PdfView(_ref) {\n  _s();\n\n  var paragraphs = _ref.paragraphs;\n\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"/pdfs/visifit.pdf\"),\n      file = _useState[0],\n      setFile = _useState[1];\n\n  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null),\n      numPages = _useState2[0],\n      setNumPages = _useState2[1];\n\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_2___default().useState(1),\n      _React$useState2 = (0,_Users_sadeeq_Downloads_videopdf_node_modules_next_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(_React$useState, 2),\n      pageNumber = _React$useState2[0],\n      setPageNumber = _React$useState2[1];\n\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\"),\n      searchText = _useState3[0],\n      setSearchText = _useState3[1]; // function onFileChange(event) {\n  //   setFile(event.target.files[0]);\n  // }\n\n\n  function onDocumentLoadSuccess(_ref2) {\n    var nextNumPages = _ref2.numPages;\n    setNumPages(nextNumPages);\n  }\n\n  var router = (0,next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)(); // useEffect(() => {\n  //   const { page, para } = router.query;\n  //   if (!para) {\n  //     console.log(page);\n  //     if (page) {\n  //       setPageNumber(Number(page));\n  //     }\n  //   } else {\n  //     setTimeout(() => {\n  //       // searchTextInSentence(textArray, 'We perform')\n  //     }, 1000);\n  //     pdfmap.map((item) => {\n  //       if (Number(item.id) == para) {\n  //         setPageNumber(Number(item.page));\n  //         console.log(item.paragraphs);\n  //         setSearchText(item.paragraphs.split(\" \"));\n  //       }\n  //     });\n  //   }\n  // }, [router.query.page, router.query.para]);\n  // useEffect(() => {\n  //   if (paragraphs) {\n  //     pdfmap.map((item) => {\n  //       if (Number(item.id) == paragraphs.paragraphs[0]) {\n  //         setPageNumber(Number(item.page));\n  //         console.log(item.paragraphs);\n  //         setSearchText(item.paragraphs.split(\" \"));\n  //       }\n  //     });\n  //   } else {\n  //     setPageNumber(1);\n  //   }\n  // }, [paragraphs]);\n\n  var textRenderer = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(function (textItem) {\n    return highlightPattern(textItem.str, searchText);\n  }, [searchText]);\n\n  var clicked = function clicked(index) {\n    pdfmap.map(function (item) {\n      if (Number(item.id) == paragraphs.paragraphs[index]) {\n        setPageNumber(Number(item.page));\n        setSearchText(item.paragraphs.split(\" \"));\n      }\n    });\n  };\n\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n    className: \"pdfview\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PdfView, \"Uy+pzNeTui1xut9iFtfEpuAKSf8=\", false, function () {\n  return [next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter];\n});\n\n_c = PdfView;\n/* harmony default export */ __webpack_exports__[\"default\"] = (PdfView);\n\nvar _c;\n\n$RefreshReg$(_c, \"PdfView\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/PdfView.jsx\n");

/***/ })

});